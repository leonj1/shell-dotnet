# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /source

# Copy all project files
COPY . .

# Build the sample application to validate it compiles
RUN dotnet build samples/SampleBusinessLogic/SampleBusinessLogic.csproj -c Release /p:TreatWarningsAsErrors=false

# Publish the sample application
RUN dotnet publish samples/SampleBusinessLogic/SampleBusinessLogic.csproj -c Release -o /app/publish --no-build

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS runtime
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r dotnetapp && useradd -r -g dotnetapp dotnetapp

# Copy published output from build stage
COPY --from=build --chown=dotnetapp:dotnetapp /app/publish .

# Switch to non-root user
USER dotnetapp

# Configure ASP.NET Core
ENV ASPNETCORE_URLS=http://+:5000
ENV ASPNETCORE_ENVIRONMENT=Production
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false

# Expose port
EXPOSE 5000

# Note: This is a module/library, not a standalone application
# In a real scenario, this would be loaded by the Shell Host
ENTRYPOINT ["echo", "Sample module built successfully. This is a library module that should be loaded by DotNetShell.Host"]